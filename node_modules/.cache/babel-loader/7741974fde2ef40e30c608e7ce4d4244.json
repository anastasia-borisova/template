{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anast\\\\tensor\\\\template\\\\src\\\\components\\\\Content.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { setToken, getPlaylistsByCategories, checkToken } from \"../utils/helpers\";\nimport { search } from \"../utils/api\";\nimport MainPage from \"./MainPage\";\nimport SearchResults from \"./SearchResults\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Content(props) {\n  _s();\n\n  const [categories, setCategories] = useState([]);\n  const [showAll, setShowAll] = useState(false);\n  const [content, setContent] = useState( /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false));\n  useEffect(() => {\n    setToken();\n  }, []);\n  useEffect(() => {\n    getPlaylistsByCategories(showAll).then(result => setCategories(result));\n  }, [showAll]);\n  useEffect(() => {\n    setContent( /*#__PURE__*/_jsxDEV(MainPage, {\n      categories: categories,\n      onClick: buttonClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 16\n    }, this));\n  }, [categories]);\n  let keyPressTimeout = null;\n\n  const keyPress = async searchQuery => {\n    keyPressTimeout = null;\n    checkToken();\n    const token = localStorage.getItem('token');\n\n    if (token) {\n      const queryResult = await search(token, searchQuery);\n      return queryResult;\n    }\n  };\n\n  const setSearchResult = searchValue => {\n    if (searchValue) {\n      if (keyPressTimeout) {\n        clearTimeout(keyPressTimeout);\n      }\n\n      keyPressTimeout = setTimeout(() => {\n        keyPress(searchValue).then(result => {\n          if (result) setContent( /*#__PURE__*/_jsxDEV(SearchResults, {\n            albums: result.albums,\n            artists: result.artists,\n            tracks: result.tracks\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 24\n          }, this));\n        });\n      }, 150);\n    }\n  };\n\n  useEffect(() => {\n    setSearchResult(props.searchValue);\n  }, [props.searchValue]);\n\n  const buttonClick = event => {\n    if (event.target.classList.contains('show-all')) {\n      if (event.target.textContent === 'Показать все') {\n        event.target.textContent = 'Скрыть';\n        setShowAll(true);\n      } else {\n        event.target.textContent = 'Показать все';\n        setShowAll(false);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"content\",\n    children: content\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Content, \"nljvX5JCmXWZqgzPZz6blWAyimA=\");\n\n_c = Content;\n\nvar _c;\n\n$RefreshReg$(_c, \"Content\");","map":{"version":3,"sources":["C:/Users/anast/tensor/template/src/components/Content.tsx"],"names":["React","useState","useEffect","setToken","getPlaylistsByCategories","checkToken","search","MainPage","SearchResults","Content","props","categories","setCategories","showAll","setShowAll","content","setContent","then","result","buttonClick","keyPressTimeout","keyPress","searchQuery","token","localStorage","getItem","queryResult","setSearchResult","searchValue","clearTimeout","setTimeout","albums","artists","tracks","event","target","classList","contains","textContent"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { setToken, getPlaylistsByCategories, checkToken } from \"../utils/helpers\";\r\nimport { search } from \"../utils/api\";\r\nimport MainPage from \"./MainPage\";\r\nimport SearchResults from \"./SearchResults\";\r\n\r\nexport default function Content(props: { searchValue: string }) {\r\n  const [categories, setCategories] = useState([]);\r\n  const [showAll, setShowAll] = useState(false);\r\n  const [content, setContent] = useState(<></>)\r\n\r\n  useEffect(() => {\r\n    setToken();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getPlaylistsByCategories(showAll).then((result) => setCategories(result));\r\n  }, [showAll]);\r\n\r\n  useEffect(() => {\r\n    setContent(<MainPage categories={categories} onClick={buttonClick}/>);\r\n  }, [categories]);\r\n\r\n  let keyPressTimeout = null;\r\n\r\n  const keyPress = async(searchQuery) => {\r\n    keyPressTimeout = null;\r\n    checkToken();\r\n    const token = localStorage.getItem('token');\r\n    if(token) {\r\n      const queryResult = await search(token, searchQuery);\r\n      return queryResult;\r\n    }\r\n  }\r\n\r\n  const setSearchResult = (searchValue) => {\r\n    if(searchValue) {\r\n      if(keyPressTimeout) {\r\n        clearTimeout(keyPressTimeout);\r\n      }\r\n      keyPressTimeout = setTimeout(() => {\r\n        keyPress(searchValue).then((result) => {\r\n          if(result)\r\n            setContent(<SearchResults albums={result.albums} artists={result.artists} tracks={result.tracks}/>)\r\n        });\r\n      }, 150);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    setSearchResult(props.searchValue);\r\n  }, [props.searchValue]);\r\n\r\n\r\n  const buttonClick = (event: React.MouseEvent) => {\r\n    if(event.target.classList.contains('show-all')) {\r\n      if(event.target.textContent === 'Показать все') {\r\n        event.target.textContent = 'Скрыть';\r\n        setShowAll(true);\r\n      }\r\n      else {\r\n        event.target.textContent = 'Показать все';\r\n        setShowAll(false);\r\n     }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <main className=\"content\">\r\n        {content}\r\n    </main>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}